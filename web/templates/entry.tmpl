<!DOCTYPE html>
<html lang="en">
<head>
  <title>{{ .title }}</title>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="stylesheet" href="http://maxcdn.bootstrapcdn.com/bootstrap/3.3.4/css/bootstrap.min.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/dropzone/4.2.0/dropzone.css">
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>
  <script src="http://maxcdn.bootstrapcdn.com/bootstrap/3.3.4/js/bootstrap.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/ace/1.2.3/ace.js" type="text/javascript" charset="utf-8"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/dropzone/4.2.0/dropzone.js" type="text/javascript"></script>

</head>
<body>

<style type="text/css" media="screen">
#editor { 
position: relative;
top: 0;
right: 0;
bottom: 0;
left: 0;
}
.top-buffer { margin-top:20px;  }


.dropzone {
    min-height: 1px;
    padding: 0px 0px;
}

</style>

    {{ template "menu.tmpl" }}

<div class="container">
  <div class="row">
    <div class="col-md-12">

    <div class="col-md-10"><h2>Title</h2></div>
    <div class="col-md-2">
    <form action="/upload" class="dropzone" id="upload">
    <div class="dz-message needsclick">Drop files here or click to upload.</div>
    </form>
    </div>

    <form class="form-horizontal" method="post" action="{{ .prefix }}/entry/{{ .entry.Id }}">
    <input class="form-control" id="title" name="Title" value="{{ .entry.Title }}" />
    <h2>Markdown</h2>
    <input type="hidden" id="markdown" name="Markdown"/>
    <div class="col-md-6">
       <div id="editor">
       </div>
    </div>
    <div class="col-md-6" id="render">
    </div>
    </div>
  </div>
  <div class="row top-buffer">
<!-- Button -->
    <div class="col-md-12">
        <button  name="btnsave" id="btnsave" class="btn btn-primary btn-lg">Save</button>
         <button name="btnback" class="btn btn-normal btn-lg">Back</button>
    </div>
</div>
    </form>

  <div class="row top-buffer">
   </div>
  </div>

<script>

var localStorageDraft = "edit-{{ .entry.Id }}-value";
var originalMarkdown = "{{ .entry.Markdown }}"
var updateMarkdownTimeout = undefined

var editor = ace.edit("editor");
editor.setTheme("ace/theme/github");
editor.getSession().setMode("ace/mode/markdown");
editor.setValue(originalMarkdown)
editor.$blockScrolling = Infinity

function updateMarkdownTimer() {
    if (updateMarkdownTimeout != undefined) {
        window.clearTimeout(updateMarkdownTimeout)
    }
    updateMarkdownTimeout = window.setTimeout(renderMarkdown, 2000)
}

var heightUpdateFunction = function() {
  localStorage[localStorageDraft]=editor.getValue()
  var newHeight =editor.getSession().getScreenLength()* editor.renderer.lineHeight
  $('#editor').height(newHeight.toString() + "px");
  $('#editor-section').height(newHeight.toString() + "px");
  editor.resize();
  updateMarkdownTimer()
};

// Set initial size to match initial content
heightUpdateFunction();
editor.getSession().on('change', heightUpdateFunction);

$( "#btnsave" ).click(function() {
    $("#markdown").val(editor.getValue())
    localStorage.removeItem(localStorageDraft)
});

function renderMarkdown (  ) {
    $.ajax({
        type: "POST",
        url: "{{ .prefix  }}/markdown",
        data: JSON.stringify({ Markdown: editor.getValue()  }),
        contentType: "application/json; charset=utf-8",
        dataType: "json",
        success: function(data){
              $("#render").html(data.html);
        },
            failure: function(errMsg) {
            alert(errMsg);
        }
    });
}

$( window ).on('beforeunload',function() {
  draft = localStorage[localStorageDraft] 
  if (draft != undefined && draft != originalMarkdown){
    return "Entry not saved, discard?"
  }
});

$( window ).on('unload',function() {
  localStorage.removeItem(localStorageDraft)
});


Dropzone.options.upload = {
    init: function() {
    this.on("success", function(file) {
        json = jQuery.parseJSON(file.xhr.response)
        if ( json.ico != "" ) {
            markdown = "[![]("+json.ico+")]("+json.path+")"+json.name
        } else {
            markdown ="![]("+json.path+")"
        }
        editor.insert(markdown);
    });
    }
};

</script>

</body>
</html>

